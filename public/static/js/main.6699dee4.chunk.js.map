{"version":3,"sources":["utils.js","baseUrl.js","projetos/ProjetosSlice.js","projetos/LinhaProjeto.js","projetos/TabelaProjetos.js","projetos/ListagemProjeto.js","projetos/ProjetoSchema.js","projetos/FormProjeto.js","store.js","App.js","serviceWorker.js","index.js"],"names":["client","endpoint","a","async","body","customConfig","headers","config","method","JSON","stringify","window","fetch","response","json","data","ok","Error","statusText","Promise","reject","message","httpGet","httpPost","httpPut","httpDelete","baseUrl","projetosAdapter","createEntityAdapter","initialState","getInitialState","status","error","fetchProjetos","createAsyncThunk","deleteProjetoServer","idProjeto","addProjetoServer","projeto","updateProjetoServer","id","projetosSlice","createSlice","name","extraReducers","pending","state","action","fulfilled","setAll","payload","rejected","removeOne","addOne","upsertOne","getSelectors","projetos","selectAllProjetos","selectAll","selectProjetosById","selectById","selectIds","LinhaProjeto","props","to","nome","sigla","IconButton","onClick","onClickExcluirProjeto","colSpan","TabelaProjetos","length","border","map","key","useStyles","makeStyles","root","background","borderRadius","boxShadow","color","height","padding","ListagemProjeto","tabelaProjetos","useSelector","dispatch","useDispatch","classes","useEffect","setTimeout","Typography","variant","Button","className","component","Link","setLocale","ptForm","projetoSchema","object","shape","string","required","max","FormProjeto","pageTitle","history","useHistory","useParams","projetoFound","useForm","resolver","yupResolver","register","handleSubmit","errors","useState","cast","projetoOnLoad","actionType","onSubmit","push","type","defaultValue","ref","store","configureStore","reducer","projetosReducer","theme","createMuiTheme","palette","primary","main","lightGreen","secondary","orange","responsiveFontSizes","App","ThemeProvider","CssBaseline","Container","maxWidth","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6699dee4.chunk.js","sourcesContent":["async function client(endpoint, { body, ...customConfig } = {}) {\r\n    const headers = { 'Content-Type': 'application/json' }\r\n  \r\n    const config = {\r\n      method: body ? 'POST' : 'GET',\r\n      ...customConfig,\r\n      headers: {\r\n        ...headers,\r\n        ...customConfig.headers,\r\n      },\r\n    }\r\n  \r\n    if (body) {\r\n      config.body = JSON.stringify(body)\r\n    }\r\n  \r\n    let data\r\n    try {\r\n      const response = await window.fetch(endpoint, config)\r\n      data = await response.json()\r\n      if (response.ok) {\r\n        return data\r\n      }\r\n      throw new Error(response.statusText)\r\n    } catch (err) {\r\n      return Promise.reject(err.message ? err.message : data)\r\n    }\r\n  }\r\n  \r\n  export const httpGet = async function (endpoint, customConfig = {}) {\r\n    return client(endpoint, { ...customConfig, method: 'GET' })\r\n  }\r\n  \r\n  export const httpPost = async function (endpoint, body, customConfig = {}) {\r\n    return client(endpoint, {body, ...customConfig, method: 'POST'})\r\n  }\r\n\r\n  export const httpPut = async function (endpoint, body, customConfig = {}) {\r\n    return client(endpoint, {body, ...customConfig, method: 'PUT'})\r\n  }\r\n\r\n  export const httpDelete = async function (endpoint, customConfig = {}) {\r\n    return client(endpoint, { ...customConfig, method: 'DELETE' })\r\n  }","export const baseUrl = 'http://192.168.15.12:3004';","import {createSlice, createAsyncThunk, createEntityAdapter} from '@reduxjs/toolkit'\r\nimport {httpDelete, httpGet, httpPut, httpPost} from '../utils'\r\nimport {baseUrl} from '../baseUrl'\r\n\r\nconst projetosAdapter = createEntityAdapter();\r\n\r\nconst initialState = projetosAdapter.getInitialState({\r\n    status: 'not_loaded',\r\n    error: null\r\n    /* o array projetos foi removido do state inicial, será criado pelo adapter */\r\n});\r\n\r\nexport const fetchProjetos = createAsyncThunk('projetos/fetchProjetos', async () => {\r\n    return await httpGet(`${baseUrl}/projetos`);\r\n});\r\n\r\nexport const deleteProjetoServer = createAsyncThunk('projetos/deleteProjetoServer', async (idProjeto) => {\r\n    await httpDelete(`${baseUrl}/projetos/${idProjeto}`);\r\n    return idProjeto;\r\n});\r\n\r\nexport const addProjetoServer = createAsyncThunk('projetos/addProjetoServer', async (projeto) => {\r\n    return await httpPost(`${baseUrl}/projetos`, projeto);\r\n});\r\n\r\nexport const updateProjetoServer = createAsyncThunk('projetos/updateProjetoServer', async (projeto) => {\r\n    return await httpPut(`${baseUrl}/projetos/${projeto.id}`, projeto);\r\n});\r\n\r\nexport const projetosSlice = createSlice({\r\n    name: 'projetos',\r\n    initialState: initialState,\r\n    extraReducers: {\r\n       [fetchProjetos.pending]: (state, action) => {state.status = 'loading'},\r\n       [fetchProjetos.fulfilled]: (state, action) => {state.status = 'loaded'; projetosAdapter.setAll(state, action.payload);},\r\n       [fetchProjetos.rejected]: (state, action) => {state.status = 'failed'; state.error = action.error.message},\r\n       [deleteProjetoServer.pending]: (state, action) => {state.status = 'loading'},\r\n       [deleteProjetoServer.fulfilled]: (state, action) => {state.status = 'deleted'; projetosAdapter.removeOne(state, action.payload);},\r\n       [addProjetoServer.pending]: (state, action) => {state.status = 'loading'},\r\n       [addProjetoServer.fulfilled]: (state, action) => {state.status = 'saved'; projetosAdapter.addOne(state, action.payload);},\r\n       [updateProjetoServer.pending]: (state, action) => {state.status = 'loading'},\r\n       [updateProjetoServer.fulfilled]: (state, action) => {state.status = 'saved'; projetosAdapter.upsertOne(state, action.payload);},\r\n    },\r\n})\r\n\r\nexport default projetosSlice.reducer\r\n\r\nexport const {\r\n    selectAll: selectAllProjetos,\r\n    selectById: selectProjetosById,\r\n    selectIds: selectProjetosIds\r\n} = projetosAdapter.getSelectors(state => state.projetos)\r\n    \r\n","import React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {Link } from \"react-router-dom\";\r\n\r\n/**\r\n * @module projetos/LinhaProjeto\r\n */\r\n\r\n /**\r\n * @typedef Projeto\r\n * @type {object}\r\n * @property {number} id - identificador.\r\n * @property {string} nome - nome do projeto.\r\n * @property {string} sigla - sigla do projeto.\r\n */\r\n\r\n /**\r\n  * Renderiza uma linha na listagem de projetos contendo um projeto com nome e sigla, \r\n  * juntamente com o botão de excluir.\r\n  * @param {Projeto} props.projeto - Projeto a ser renderizado na linha.\r\n  */\r\nfunction LinhaProjeto(props){\r\n    if(props != null && props.projeto != null && props.projeto.id != null){\r\n        return(\r\n            <tr><td><Link to={`/projetos/${props.projeto.id}`}><button>{props.projeto.nome}</button></Link></td>\r\n                <td>{props.projeto.sigla}</td>\r\n                <td><IconButton id={`excluir_projeto_${props.projeto.id}`} name=\"excluir_projeto\" onClick={() => props.onClickExcluirProjeto(props.projeto.id)}><DeleteIcon /></IconButton></td>\r\n            </tr>\r\n        );\r\n    }else{\r\n        return(<tr><td colSpan={3}>Não foi possível exibir o projeto.</td></tr>)\r\n    }\r\n}\r\n\r\nexport default LinhaProjeto;","import React from 'react';\r\nimport LinhaProjeto from './LinhaProjeto';\r\n\r\n/**\r\n * @module projetos/TabelaProjetos\r\n */\r\n\r\n\r\n/**\r\n * Renderiza a tabela de projetos.\r\n * \r\n * @param {object} props.projetos - Lista de projetos para ser exibida na tabela.\r\n * \r\n */\r\nfunction TabelaProjetos(props){\r\n    if(props != null && props.projetos != null && props.projetos.length > 0){\r\n      return(\r\n          <table id=\"projetos\" border=\"1\">\r\n              <tbody>\r\n                {props.projetos.map((projeto) => <LinhaProjeto key={projeto.id} projeto={projeto} \r\n                onClickExcluirProjeto={props.onClickExcluirProjeto} />)}\r\n              </tbody>\r\n          </table>\r\n      );\r\n    }else{\r\n      return(<div id=\"projetos\">Não existem projetos a serem exibidos.</div>)\r\n    }\r\n}\r\n\r\nexport default TabelaProjetos;","import React, {useEffect} from 'react';\r\nimport {Link } from \"react-router-dom\";\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {deleteProjetoServer, fetchProjetos, selectAllProjetos} from './ProjetosSlice'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TabelaProjetos from './TabelaProjetos';\r\n\r\n/**\r\n * @module projetos/ListagemProjetos\r\n */\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n      border: 0,\r\n      borderRadius: 3,\r\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      color: 'white',\r\n      height: 48,\r\n      padding: '0 30px',\r\n    },\r\n  });\r\n  \r\n  \r\n  /**\r\n   * Renderiza a tela de Listagem de projetos.\r\n   * \r\n   */\r\n  function ListagemProjeto(props){\r\n    \r\n    const projetos = useSelector(selectAllProjetos)\r\n    const status = useSelector(state => state.projetos.status);\r\n    const error = useSelector(state => state.projetos.error);\r\n  \r\n    const dispatch = useDispatch();\r\n  \r\n    const classes = useStyles();\r\n  \r\n    function handleClickExcluirProjeto(id){\r\n          dispatch(deleteProjetoServer(id));\r\n    }\r\n  \r\n     useEffect(() => {\r\n          if (status === 'not_loaded' ) {\r\n              dispatch(fetchProjetos())\r\n          }else if(status === 'failed'){\r\n              setTimeout(()=>dispatch(fetchProjetos()), 5000);\r\n          }\r\n      }, [status, dispatch])\r\n      \r\n    \r\n    let tabelaProjetos;\r\n    if(status === 'loaded' || status === 'saved' || status === 'deleted'){\r\n      tabelaProjetos = <TabelaProjetos projetos={projetos} onClickExcluirProjeto={handleClickExcluirProjeto} />;\r\n    }else if(status === 'loading'){\r\n      tabelaProjetos = <div id=\"projetos\">Carregando os projetos...</div>;\r\n    }else if(status === 'not_loaded'){\r\n      tabelaProjetos = '';\r\n    }else{\r\n      //status === 'failed' or any other\r\n      tabelaProjetos = <div id=\"projetos\">Error: {error}</div>;\r\n    }\r\n  \r\n    return (\r\n              <>\r\n                <div id=\"lbl_titulo_pagina\"><Typography variant=\"h3\">Listagem de Projetos</Typography></div><br/>\r\n                <Button className={classes.root} id=\"Novo Projeto\" name=\"btn_novo_projeto\" to=\"/projetos/novo\" component={Link}>Novo Projeto</Button><br/><br/>\r\n                {tabelaProjetos}\r\n              </>\r\n          );\r\n  }\r\n  \r\n  export default ListagemProjeto;\r\n  ","import {string, object, number, setLocale} from 'yup';\r\nimport { ptForm } from 'yup-locale-pt';\r\n\r\nsetLocale(ptForm)\r\n\r\nexport let projetoSchema = object().shape(\r\n    {\r\n        id: string(),\r\n        nome: string().required().max(30),\r\n        sigla: string().required().max(5)\r\n    }\r\n)\r\n","import React, {useState} from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addProjetoServer, updateProjetoServer, selectProjetosById} from './ProjetosSlice'\r\nimport {projetoSchema} from './ProjetoSchema';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nexport default function FormProjeto(props){\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    let { id } = useParams();\r\n    \r\n    const projetoFound = useSelector(state => selectProjetosById(state, id))\r\n    const { register, handleSubmit, errors } = useForm({\r\n            resolver: yupResolver(projetoSchema)\r\n        });\r\n        \r\n\r\n    const [projetoOnLoad] = useState(\r\n        id ? projetoFound ?? projetoSchema.cast({}): projetoSchema.cast({}));\r\n\r\n    const [actionType, ] = useState(\r\n        id ? projetoFound \r\n                ? 'projetos/updateProjeto'\r\n                : 'projetos/addProjeto'\r\n                : 'projetos/addProjeto');\r\n\r\n\r\n    function onSubmit(projeto){\r\n        if(actionType === 'projetos/addProjeto'){\r\n            dispatch(addProjetoServer(projeto));\r\n        }else{\r\n            dispatch(updateProjetoServer({...projeto, id: projetoFound.id}));\r\n        }\r\n        \r\n        history.push('/projetos');\r\n    }\r\n    let pageTitle;\r\n    if(actionType === 'projetos/addProjeto'){\r\n        pageTitle = 'Novo Projeto';\r\n    }else{\r\n        pageTitle = 'Alteração de Projeto';\r\n    }\r\n    \r\n    return(<>\r\n            <h1>{pageTitle}</h1>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n            <label>\r\n                Nome:\r\n                <input type=\"text\" name=\"nome\" id=\"nome\"  defaultValue={projetoOnLoad.nome} ref={register} />\r\n                &nbsp;<span id=\"nome_err_msg\">{errors.nome?.message}</span>\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Sigla:\r\n                <input type=\"text\" name=\"sigla\" id=\"sigla\"  defaultValue={projetoOnLoad.sigla} ref={register} />\r\n                &nbsp;<span id=\"sigla_err_msg\">{errors.sigla?.message}</span>\r\n            </label>\r\n            <br/>\r\n            <br/>   \r\n            <Button type=\"submit\" id=\"Salvar\" name=\"btn_salvar_projeto\" variant=\"contained\" color=\"primary\">Salvar</Button>\r\n            </form>\r\n          </>\r\n    );\r\n}","import { configureStore } from '@reduxjs/toolkit'\r\n\r\n\r\nimport projetosReducer from './projetos/ProjetosSlice'\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n      projetos: projetosReducer \r\n     /*aqui poderiam entrar mais reducers, um por chave do mapa */\r\n    }\r\n})\r\n","import React from 'react';\nimport ListagemProjeto from './projetos/ListagemProjeto';\nimport FormProjeto from './projetos/FormProjeto';\nimport {store} from './store';\nimport { Provider } from 'react-redux'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\"; \nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider, createMuiTheme, responsiveFontSizes  } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n//importe as cores que selecionou anteriormente\nimport {lightGreen, orange} from '@material-ui/core/colors';\n\nlet theme = createMuiTheme({\n \n  palette: {\n    primary: {\n      main: lightGreen[500],\n    },\n    secondary: {\n      main: orange[800],\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme);\n\n\nconst App = (props) => {\n\n  return (<>\n            <ThemeProvider theme={theme}>\n              <CssBaseline />\n              <Provider store={store}>\n              <Container maxWidth=\"sm\">\n              <Router>\n                <div>\n                      <nav>\n                        <ul>\n                          <li><Link to=\"/\">Home</Link></li>\n                          <li><Link to=\"/projetos/novo\">Novo Projeto</Link></li>\n                          <li><Link to=\"/projetos\">Projetos</Link></li>\n                        </ul>\n                      </nav>\n                      <Switch>\n                        <Route path=\"/projetos/novo\"><FormProjeto /></Route>\n                        <Route path=\"/projetos/:id\"><FormProjeto /></Route>\n                        <Route path=\"/projetos\"><ListagemProjeto /></Route>\n                        <Route path=\"/\"><ListagemProjeto /></Route>\n                      </Switch>\n                  </div>\n              </Router>\n              </Container>\n              </Provider>\n            </ThemeProvider>\n          </>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}